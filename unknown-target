package com.fmoreno.telegramtaskaiagent.agents;

import com.fmoreno.telegramtaskaiagent.persistence.UserRepository;
import com.fmoreno.telegramtaskaiagent.persistence.model.UserEntity;
import com.fmoreno.telegramtaskaiagent.service.MessageService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.ZonedDateTime;
import java.util.List;

@Service
public class NotificationAgent {

    private final UserRepository userRepository;
    private final MessageService messageService;

    @Autowired
    public NotificationAgent(UserRepository userRepository, MessageService messageService) {
        this.userRepository = userRepository;
        this.messageService = messageService;
    }

    public void sendNotification(String sqlQuery, String executionResult) {
        String notificationMessage = generateNotificationMessage(sqlQuery, executionResult);
        List<UserEntity> users = userRepository.findAll();
        for (UserEntity user : users) {
            messageService.sendMessage(user.getChatId(), notificationMessage);
        }
    }

    private String generateNotificationMessage(String sqlQuery, String executionResult) {
        String lowerCaseQuery = sqlQuery.toLowerCase().trim();
        String title;
        if (lowerCaseQuery.startsWith("insert")) {
            title = "Task Created";
        } else if (lowerCaseQuery.startsWith("update")) {
            title = "Task Updated";
        } else if (lowerCaseQuery.startsWith("delete")) {
            title = "Task Deleted";
        } else {
            title = "Task Notification";
        }

        // Assuming executionResult contains task details in a specific format
        String[] taskDetails = executionResult.split(",");
        String taskId = taskDetails[0].split(":")[1].trim();
        String description = taskDetails[1].split(":")[1].trim();
        String assignee = taskDetails[2].split(":")[1].trim();
        String status = taskDetails[3].split(":")[1].trim();
        String timestamp = ZonedDateTime.now().toString();

        return String.format("*%s*\n- **Task ID**: %s\n- **Description**: %s\n- **Assignee**: %s\n- **Status**: %s\n- **Timestamp**: %s",
                title, taskId, description, assignee, status, timestamp);
    }
}
